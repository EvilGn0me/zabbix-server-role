---
# tasks file for zabbix
- name: Load a variable file based on the OS type.
  include_vars: '{{ item }}'
  with_first_found:
    - '{{ ansible_distribution|lower }}.yml'
    - '{{ ansible_os_family|lower }}.yml'

- name: pre-requisites tasks
  import_tasks: redhat.yml
  when: ansible_os_family|lower == 'redhat'

- name: pre-requisites tasks
  import_tasks: debian.yml
  when: ansible_os_family|lower == 'debian'

- name: create database for zabbix
  mysql_db:
    name: zabbix
    state: present

- name: create mysql user for zabbix
  mysql_user:
    name: "{{ zabbix_server_conf.mysql.user }}"
    password: "{{ zabbix_server_conf.mysql.password }}"
    priv: '{{ zabbix_server_conf.mysql.database }}.*:ALL'
    state: present

- name: check if db scheme file exists
  stat:
    path: "/etc/zabbix/db_created"
  register: db_exists

- name: copy zabbix schema init file
  copy:
    src: "templates/create.sql"
    dest: "{{ zabbix_server.db_scheme_path }}"
    owner: root
    group: root
    mode: 0644
  when: db_exists.stat.exists == False
  notify: restart zabbix-server

- name: import zabbix db
  mysql_db:
    state: import
    name: "{{ zabbix_server_conf.mysql.database }}"
    target: "{{ zabbix_server.db_scheme_path }}"
  when: db_exists.stat.exists == False
  notify: restart zabbix-server

- name: create db_create file anchor
  file:
    name: "/etc/zabbix/db_created"
    state: touch
  when: db_exists.stat.exists == False

- name: manage zabbix nginx config
  template:
    src: "templates/zabbix.conf"
    dest: "/etc/nginx/conf.d/zabbix.conf"
    owner: "{{ nginx_conf.user }}"
    group: "{{ nginx_conf.user }}"
    mode: 0644
  notify: nginx restart

- name: change zabbix directory rights
  file:
    name: "{{ item }}"
    owner: "{{ nginx_conf.user }}"
    group: "{{ nginx_conf.user }}"
    recurse: yes
  with_items:
  - /etc/zabbix/web

- name: manage zabbix-server config file
  template:
    src: "templates/zabbix_server.conf"
    dest: "/etc/zabbix/zabbix_server.conf"
    owner: root
    group: root
    mode: 0644
  notify: restart zabbix-server

- name: manage zabbix web interface config
  template:
    src: "templates/zabbix.conf.php"
    dest: "/etc/zabbix/web/zabbix.conf.php"
    owner: "{{ nginx_conf.user }}"
    group: "{{ nginx_conf.user }}"
    mode: 0644
  notify: nginx restart

- name: add zabbix user to sudoers
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: 'zabbix'
    line: 'zabbix ALL=NOPASSWD: /usr/bin/nmap'

- name: install telegram bot
  import_tasks: telegram_bot.yml
  when: zabbix_server.telegram.apikey is defined

- name: manage slack_notify.sh alertscript
  template:
    src: "templates/{{ item }}"
    dest: '/usr/lib/zabbix/alertscripts/{{ item }}'
    owner: root
    group: root
    mode: 0755
  with_items:
    - slack_notify.sh
  notify: restart zabbix-server
  when: zabbix_server.slack.webhook is defined

- name: manage slack_notify.sh alertscript
  template:
    src: "templates/{{ item }}"
    dest: '/usr/lib/zabbix/alertscripts/{{ item }}'
    owner: root
    group: root
    mode: 0755
  with_items:
    - smsc.sh
  notify: restart zabbix-server
  when: zabbix_server.smsc.pass is defined

- name: ensure services running
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
  - "{{ nginx.services }}"
  - "{{ php_fpm.services }}"
  - "{{ mariadb.services }}"
  - "{{ zabbix_server.services }}"
